I"ä7<p>EVO inherit the ultimate power of <a href="https://github.com/gofiber/fiber">Fiber</a> in background. So all the routing system is inherited from Fiber.</p>

<p><strong>Routing</strong> refers to how an applicationâ€™s endpoints (URIs) respond to client requests.</p>

<h2 id="paths">Paths</h2>

<p>Route paths, in combination with a request method, define the endpoints at which requests can be made. Route paths can be <strong>strings</strong> or <strong>string patterns</strong>.</p>

<p><strong>Examples of route paths based on strings</strong></p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">// This route path will match requests to the root route, "/":</span>
<span class="n">evo</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="s">"/"</span><span class="p">,</span> <span class="k">func</span><span class="p">(</span><span class="n">request</span> <span class="o">*</span><span class="n">evo</span><span class="o">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Send</span><span class="p">(</span><span class="s">"root"</span><span class="p">)</span>
<span class="p">})</span>

<span class="c">// This route path will match requests to "/about":</span>
<span class="n">evo</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="s">"/about"</span><span class="p">,</span> <span class="k">func</span><span class="p">(</span><span class="n">request</span> <span class="o">*</span><span class="n">evo</span><span class="o">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Send</span><span class="p">(</span><span class="s">"about"</span><span class="p">)</span>
<span class="p">})</span>

<span class="c">// This route path will match requests to "/random.txt":</span>
<span class="n">evo</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="s">"/random.txt"</span><span class="p">,</span> <span class="k">func</span><span class="p">(</span><span class="n">request</span> <span class="o">*</span><span class="n">evo</span><span class="o">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Send</span><span class="p">(</span><span class="s">"random.txt"</span><span class="p">)</span>
<span class="p">})</span>
</code></pre></div></div>

<h2 id="parameters">Parameters</h2>

<p>Route parameters are <strong>named URL segments</strong> that are used to capture the values specified at their position in the URL. The captured values can be retrieved using the <a href="https://fiber.wiki/context#params">Params</a> function, with the name of the route parameter specified in the path as their respective keys.</p>

<p>Name of the route parameter must be made up of <strong>characters</strong> (<code class="language-plaintext highlighter-rouge">[A-Za-z0-9_]</code>).</p>

<p><strong>Example of define routes with route parameters</strong></p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">// Parameters</span>
<span class="n">evo</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="s">"/user/:name/books/:title"</span><span class="p">,</span> <span class="k">func</span><span class="p">(</span><span class="n">request</span> <span class="o">*</span><span class="n">evo</span><span class="o">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Write</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">Params</span><span class="p">(</span><span class="s">"name"</span><span class="p">))</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Write</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">Params</span><span class="p">(</span><span class="s">"title"</span><span class="p">))</span>
<span class="p">})</span>
<span class="c">// Wildcard</span>
<span class="n">evo</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="s">"/user/*"</span><span class="p">,</span> <span class="k">func</span><span class="p">(</span><span class="n">request</span> <span class="o">*</span><span class="n">evo</span><span class="o">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Send</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">Params</span><span class="p">(</span><span class="s">"*"</span><span class="p">))</span>
<span class="p">})</span>
<span class="c">// Optional parameter</span>
<span class="n">app</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="s">"/user/:name?"</span><span class="p">,</span> <span class="k">func</span><span class="p">(</span><span class="n">request</span> <span class="o">*</span><span class="n">evo</span><span class="o">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Send</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">Params</span><span class="p">(</span><span class="s">"name"</span><span class="p">))</span>
<span class="p">})</span>
</code></pre></div></div>

<p>Since the hyphen (<code class="language-plaintext highlighter-rouge">-</code>) and the dot (<code class="language-plaintext highlighter-rouge">.</code>) are interpreted literally, they can be used along with route parameters for useful purposes.</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">// http://localhost:3000/plantae/prunus.persica</span>
<span class="n">evo</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="s">"/plantae/:genus.:species"</span><span class="p">,</span> <span class="k">func</span><span class="p">(</span><span class="n">request</span> <span class="o">*</span><span class="n">evo</span><span class="o">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Params</span><span class="p">(</span><span class="s">"genus"</span><span class="p">)</span>   <span class="c">// prunus</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Params</span><span class="p">(</span><span class="s">"species"</span><span class="p">)</span> <span class="c">// persica</span>
<span class="p">})</span>
</code></pre></div></div>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">// http://localhost:3000/flights/LAX-SFO</span>
<span class="n">evo</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="s">"/flights/:from-:to"</span><span class="p">,</span> <span class="k">func</span><span class="p">(</span><span class="n">request</span> <span class="o">*</span><span class="n">evo</span><span class="o">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Params</span><span class="p">(</span><span class="s">"from"</span><span class="p">)</span>   <span class="c">// LAX</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Params</span><span class="p">(</span><span class="s">"to"</span><span class="p">)</span>     <span class="c">// SFO</span>
<span class="p">})</span>
</code></pre></div></div>

<h2 id="middleware">Middleware</h2>

<p>Functions, that are designed to make changes to the request or response, are called <strong>middleware functions</strong>. The <a href="https://github.com/gofiber/docs/tree/34729974f7d6c1d8363076e7e88cd71edc34a2ac/context/README.md#next">Next</a> is a <strong>Fiber</strong> router function, when called, executes the <strong>next</strong> function that <strong>matches</strong> the current route.</p>

<p><strong>Example of a middleware function</strong></p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">app</span><span class="o">.</span><span class="n">Use</span><span class="p">(</span><span class="k">func</span><span class="p">(</span><span class="n">request</span> <span class="o">*</span><span class="n">evo</span><span class="o">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
  <span class="c">// Set some security headers:</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Set</span><span class="p">(</span><span class="s">"X-XSS-Protection"</span><span class="p">,</span> <span class="s">"1; mode=block"</span><span class="p">)</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Set</span><span class="p">(</span><span class="s">"X-Content-Type-Options"</span><span class="p">,</span> <span class="s">"nosniff"</span><span class="p">)</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Set</span><span class="p">(</span><span class="s">"X-Download-Options"</span><span class="p">,</span> <span class="s">"noopen"</span><span class="p">)</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Set</span><span class="p">(</span><span class="s">"Strict-Transport-Security"</span><span class="p">,</span> <span class="s">"max-age=5184000"</span><span class="p">)</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Set</span><span class="p">(</span><span class="s">"X-Frame-Options"</span><span class="p">,</span> <span class="s">"SAMEORIGIN"</span><span class="p">)</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Set</span><span class="p">(</span><span class="s">"X-DNS-Prefetch-Control"</span><span class="p">,</span> <span class="s">"off"</span><span class="p">)</span>

  <span class="c">// Go to next middleware:</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Next</span><span class="p">()</span>
<span class="p">})</span>

<span class="n">app</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="s">"/"</span><span class="p">,</span> <span class="k">func</span><span class="p">(</span><span class="n">request</span> <span class="o">*</span><span class="n">evo</span><span class="o">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">request</span><span class="o">.</span><span class="n">Send</span><span class="p">(</span><span class="s">"Hello, World!"</span><span class="p">)</span>
<span class="p">})</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">Use</code> method path is a <strong>mount</strong> or <strong>prefix</strong> path and limits middleware to only apply to any paths requested that begin with it. This means you cannot use <code class="language-plaintext highlighter-rouge">:params</code> on the <code class="language-plaintext highlighter-rouge">Use</code> method.</p>

<h2 id="grouping">Grouping</h2>

<p>If you have many endpoints, you can organize your routes using <code class="language-plaintext highlighter-rouge">Group</code></p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">evo</span><span class="o">.</span><span class="n">Setup</span><span class="p">()</span>
  
  <span class="n">api</span> <span class="o">:=</span> <span class="n">evo</span><span class="o">.</span><span class="n">Group</span><span class="p">(</span><span class="s">"/api"</span><span class="p">,</span> <span class="n">cors</span><span class="p">())</span>  <span class="c">// /api</span>

  <span class="n">v1</span> <span class="o">:=</span> <span class="n">api</span><span class="o">.</span><span class="n">Group</span><span class="p">(</span><span class="s">"/v1"</span><span class="p">,</span> <span class="n">mysql</span><span class="p">())</span>   <span class="c">// /api/v1</span>
  <span class="n">v1</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="s">"/list"</span><span class="p">,</span> <span class="n">handler</span><span class="p">)</span>          <span class="c">// /api/v1/list</span>
  <span class="n">v1</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="s">"/user"</span><span class="p">,</span> <span class="n">handler</span><span class="p">)</span>          <span class="c">// /api/v1/user</span>

  <span class="n">v2</span> <span class="o">:=</span> <span class="n">api</span><span class="o">.</span><span class="n">Group</span><span class="p">(</span><span class="s">"/v2"</span><span class="p">,</span> <span class="n">mongodb</span><span class="p">())</span> <span class="c">// /api/v2</span>
  <span class="n">v2</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="s">"/list"</span><span class="p">,</span> <span class="n">handler</span><span class="p">)</span>          <span class="c">// /api/v2/list</span>
  <span class="n">v2</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="s">"/user"</span><span class="p">,</span> <span class="n">handler</span><span class="p">)</span>          <span class="c">// /api/v2/user</span>
  
  <span class="n">evo</span><span class="o">.</span><span class="n">Start</span><span class="p">()</span>
<span class="p">}</span>
</code></pre></div></div>
:ET